name: Fix Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version to fix"
        required: true
        type: string

jobs:
  fix-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: releases/${{ github.event.inputs.version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build client (если нужно для docker)
        run: npm run build

      - name: Install Yandex CLI and configure docker auth
        run: |
          curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          export PATH="$PATH:$HOME/yandex-cloud/bin"
          if [ -f "$HOME/yandex-cloud/bin/docker-credential-yc" ]; then
            sudo cp "$HOME/yandex-cloud/bin/docker-credential-yc" /usr/local/bin/
          fi
          if [ -f "$HOME/yandex-cloud/bin/yc" ]; then
            sudo cp "$HOME/yandex-cloud/bin/yc" /usr/local/bin/
          fi
          echo '${{ secrets.YC_SERVICE_ACCOUNT_KEY_JSON }}' > key.json
          yc config set service-account-key key.json
          yc config set cloud-id b1g5bv1glb6q0iu7ujil
          yc config set folder-id b1gmgijkm3ugaq00n1le
          yc container registry configure-docker
          rm key.json

      - name: Build docker image with fix and latest tags
        run: |
          docker build -t cr.yandex/crp3t6gvtieggu7lip3q/app:${{ github.event.inputs.version }}_fix${{ github.run_number }} .
          docker tag cr.yandex/crp3t6gvtieggu7lip3q/app:${{ github.event.inputs.version }}_fix${{ github.run_number }} cr.yandex/crp3t6gvtieggu7lip3q/app:${{ github.event.inputs.version }}_latest

      - name: Push docker images
        run: |
          docker push cr.yandex/crp3t6gvtieggu7lip3q/app:${{ github.event.inputs.version }}_fix${{ github.run_number }}
          docker push cr.yandex/crp3t6gvtieggu7lip3q/app:${{ github.event.inputs.version }}_latest

      - name: Create git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ github.event.inputs.version }}_fix${{ github.run_number }}
          git push origin ${{ github.event.inputs.version }}_fix${{ github.run_number }}

      - name: Install GitHub CLI
        run: sudo apt update && sudo apt install -y gh

      - name: Find release Issue number
        id: find-issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_NUMBER=$(gh issue list --search "Release ${{ github.event.inputs.version }}" --json number --jq '.[0].number')
          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV

      - name: Add comment to Issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue comment $ISSUE_NUMBER \
          --body "### Fix Release\n**Date:** $(date)\n**Author:** ${{ github.actor }}\n**Fix version:** ${{ github.event.inputs.version }}_fix${{ github.run_number }}\n**Docker image:** cr.yandex/crp3t6gvtieggu7lip3q/app:${{ github.event.inputs.version }}_fix${{ github.run_number }}\n\n**Commits:**\n\`
