name: Fix Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version (например, 42)"
        required: true
        type: string

jobs:
  fix-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: releases/${{ github.event.inputs.release_version }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npx tsc --noEmit

      - name: Run tests
        run: npm run test

      - name: Install Yandex CLI and configure docker auth
        run: |
          curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          export PATH="$PATH:$HOME/yandex-cloud/bin"
          if [ -f "$HOME/yandex-cloud/bin/docker-credential-yc" ]; then
            sudo cp "$HOME/yandex-cloud/bin/docker-credential-yc" /usr/local/bin/
          fi
          if [ -f "$HOME/yandex-cloud/bin/yc" ]; then
            sudo cp "$HOME/yandex-cloud/bin/yc" /usr/local/bin/
          fi
          echo '${{ secrets.YC_SERVICE_ACCOUNT_KEY_JSON }}' > key.json
          yc config set service-account-key key.json
          yc config set cloud-id b1g5bv1glb6q0iu7ujil
          yc config set folder-id b1gmgijkm3ugaq00n1le
          yc container registry configure-docker
          rm key.json

      - name: Get fix number
        id: fixnum
        run: |
          # Определяем номер фикса по количеству существующих тегов fix для этого релиза
          FIXNUM=$(git tag | grep "^${{ github.event.inputs.release_version }}_fix" | wc -l)
          FIXNUM=$((FIXNUM+1))
          echo "fixnum=$FIXNUM" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t cr.yandex/crp3t6gvtieggu7lip3q/app:${{ github.event.inputs.release_version }}_fix${{ steps.fixnum.outputs.fixnum }} .
          docker tag cr.yandex/crp3t6gvtieggu7lip3q/app:${{ github.event.inputs.release_version }}_fix${{ steps.fixnum.outputs.fixnum }} cr.yandex/crp3t6gvtieggu7lip3q/app:${{ github.event.inputs.release_version }}_latest

      - name: Push Docker image
        run: |
          docker push cr.yandex/crp3t6gvtieggu7lip3q/app:${{ github.event.inputs.release_version }}_fix${{ steps.fixnum.outputs.fixnum }}
          docker push cr.yandex/crp3t6gvtieggu7lip3q/app:${{ github.event.inputs.release_version }}_latest

      - name: Create fix tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag ${{ github.event.inputs.release_version }}_fix${{ steps.fixnum.outputs.fixnum }}
          git push origin ${{ github.event.inputs.release_version }}_fix${{ steps.fixnum.outputs.fixnum }}

      - name: Get commits since last tag
        id: get-commits
        run: |
          # Получаем предыдущий релизный или фиксрелизный тег
          LAST_TAG=$(git tag --sort=-creatordate | grep -E "^${{ github.event.inputs.release_version }}(_fix[0-9]+)?$" | head -2 | tail -1)
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --oneline --no-merges | head -20)
          else
            COMMITS=$(git log --oneline --no-merges ${LAST_TAG}..HEAD)
          fi
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "last_tag=$LAST_TAG" >> $GITHUB_OUTPUT

      - name: Add comment to release Issue
        uses: actions/github-script@v7
        with:
          script: |
            const commits = `${{ steps.get-commits.outputs.commits }}`;
            const fixnum = '${{ steps.fixnum.outputs.fixnum }}';
            const releaseVersion = '${{ github.event.inputs.release_version }}';
            const body = '### Fix Release\n' +
              '**Date:** ' + new Date().toISOString() + '\n' +
              '**Author:** ${{ github.actor }}\n' +
              '**Fix version:** ' + releaseVersion + '_fix' + fixnum + '\n' +
              '**Docker image:** cr.yandex/crp3t6gvtieggu7lip3q/app:' + releaseVersion + '_fix' + fixnum + '\n' +
              '\n**Commits:**\n```\n' + commits + '\n```';

            // Найти Issue по названию "Release <releaseVersion>"
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            const issue = issues.data.find(i => i.title === `Release ${releaseVersion}`);
            if (issue) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body
              });
            }
